!subnode	What UDO can('t) do for you
!ignore_links

UDO has been originally developed to make it easier for you to write
software documentations or other kinds of text files that have to be
available in more than one format.

UDO can be a great help if you want to make a single destination format,
too. A beginner will have less problems when learning the UDO syntax instead
of learning (!LaTeX) or HTML. So if you want to make (!LaTeX) or HTML files
it should be easier to get to know how to make them using UDO instead of
writing them on your own. When writing (!LaTeX) or HTML files you have to
keep attention not to use any of their special command characters. In
comparison to that UDO will convert these special characters for you when
converting the source file to (!LaTeX) or HTML. But this is not the only
thing UDO can do for you.

UDO is a multilingual program. You can make German, English, French, Italian
and Swedish texts. UDO knows how ""Table of contents"", ""Appendix"",
""Figure"" or ""Table"" is called in the other countries. The date is
also printed out in the right way depended of the selected language.

The syntax of UDO is easy to learn. To make some small documentations you
just have to learn about ten to fifteen commands; as many as you have
to learn when you try to learn (!LaTeX) or HTML.

When you have written an UDO source file you can convert it into the
following formats:

!begin_enumerate !short
!item	Apple QuickView
!item	ASCII
!item	HTML (Hypertext Markup Language)
!item	(!LaTeX) 2.09, (!LaTeXe)
!item	Linuxdoc-SGML
!item	LyX
!item	Manualpage
!item	NROFF
!item	Pure C Help
!item	RTF (Rich Text Format)
!item	Source code (C and Pascal)
!item	ST-Guide
!item	Texinfo
!item	Turbo Vision Help
!item	Windows Help
!end_enumerate

As you can see some formats are just interesting for specific operating
systems, but you can also see that the list contains come formats that can
be used on nearly any existing operating system.

In most cases UDO doesn't make files that are ready to use because have to
run a further software to view, print or convert the document. E.g. you have
to convert the Windows Help source file (saved by UDO) with the Microsoft
Help Compiler (!V)HC.EXE(!v) into a Windows Help file. Or you have to import
the RTF file into a text processor to print it.

!smallskip

UDO tries to help the author of a documentation as much as possible. Next to
the conversion into the destination format UDO offers you the following
features:

!begin_itemize	!short
!item	automatically generated title pages, tables of contents, head lines
		and bottom lines,
!item	chapter numbering,
!item	tables,
!item	automatically generated hypertext links,
!item	support for different text styles,
!item	automatic conversion of umlauts and other special characters,
!item	a large variety of layout commands for making lists, enumerations,
		descriptions, justified text, centred or indented text or text with
		a right alignment,
!item	image support,
!item	automatic line breaks with a half-automatic syllabification.
!end_itemize

!smallskip

UDO is not the perfect program for all purposes. The conversion into ASCII,
ST-Guide, HTML, (!LaTeX) and Windows Help is nearly perfect. Some formats
(like Linuxdoc-SGML and LyX) are quite young and haven't been tested enough.
You will surely find some aspects that have to be changed in the near
future.

There are some points that UDO can't manage yet but will be implemented in
the very near future: a automatically generated index, list of figures and
list of tables. Just wait some months and you will get UDO Release 7 with
all these features.

!smallskip

To make complex files like newspapers that is impossible with UDO because it
can't wrap text around images and it can't generated files with two or more
text columns. In addition to that UDO hasn't got an implemented automatic
syllabification.

UDO is just a ""one way"" converter. UDO can't convert (!LaTeX), HTML or RTF
to the UDO format. It is only able to convert the UDO format into (!LaTeX)
etc. Maybe there will be a HTML2UDO or SGML2UDO converter in the near
future.

To sum it up it can be said that UDO can't manage the following things and
won't be able to manage them in the future:

!begin_enumerate !short

!item	UDO can only convert its format into the upper standing formats. UDO
can't convert them into its own format. Maybe there will be some other
converters in the near future.

!item	UDO can't make binary formats (like WinWord documents). It can only
make make formats that are based on ASCII.

!item	UDO doesn't support an automatic syllabification. You have to tell
UDO explicitely where it is allowed to split up words. I don't want to
implement an automatic syllabification because there are only some formats
that would profit from it.

!item	UDO can't wrap text around images. UDO can't save multi-columned
texts, too. These functions are part of desktop publishing and not of a
software like UDO.

!end_enumerate
