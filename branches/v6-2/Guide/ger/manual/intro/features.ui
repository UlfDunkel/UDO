!subnode	Was kann UDO und was nicht?
!ignore_links

UDO wurde ursprünglich entwickelt, um die Erzeugung von Anleitungen zu
Computerprogrammen oder vergleichbaren Dokumentationen zu
vereinfachen, die in mehr als einem Format benötigt werden.

Seit einiger Zeit leistet UDO aber auch gute Dienste, falls man nur ein
Format erzeugen will. So ist es für Anfänger sicherlich einfacher, die
Syntax von UDO zu begreifen als die von HTML oder (!LaTeX), denn bei
letzteren muß man beispielsweise höllisch aufpassen, daß man nicht
unerlaubte Zeichen im Quelltext einbaut, wogegen UDO auch mit Sonderzeichen
klarkommt und diese automatisch an das jeweilige Ausgabeformat anpaßt.
Sprich, selbst wenn man nur HTML oder nur (!LaTeX) erzeugen will, kann UDO
sehr gute Dienste leisten.

Bei alledem ist UDO multilingual, d.h. Sie können deutsche, englische,
französische, italienische und schwedische Texte erzeugen, und UDO
wird dabei die jeweils passenden Begriffe für ""Inhaltsverzeichnis"",
""Anhang"", ""Abbildung"" oder ""Tabelle"" ausgeben oder das Datum im
Format der gewählten Sprache darstellen.

Die Syntax von UDO ist sehr leicht zu erlernen. Zur Erstellung einfacher
Dateien muß man lediglich Kenntnis von etwas zehn bis fünfzehn Befehlen
besitzen, also in etwa so viel, wie Sie auch beim Verfassen von HTML- oder
(!LaTeX)-Dateien besitzen müssen.

Haben Sie einen Quelltext erstellt, so können Sie diesen in folgende,
alphabetisch sortierten Formate umwandeln:

!begin_enumerate !short
!item	Apple QuickView
!item	ASCII
!item	HTML (Hypertext Markup Language)
!item	(!LaTeX) 2.09, (!LaTeXe)
!item	Linuxdoc-SGML
!item	LyX
!item	Manualpage
!item	NROFF
!item	Pure-C-Help
!item	RTF (Rich Text Format)
!item	Sourcecode (C und Pascal)
!item	ST-Guide
!item	Texinfo
!item	Turbo-Vision-Help
!item	Windows-Help
!end_enumerate

Einige Formate sind systemweit austauschbar, einige sind nur
auf bestimmten System von Interesse.

UDO erzeugt größtenteils keine ''fertigen'' Dokumente. In aller Regel müssen
die von UDO erzeugten Dateien erst noch durch weitere Programme bearbeitet
werden. So müssen Windows-Help-Quelltexte erst noch durch den
Hypertext-Compiler (!V)HC.EXE(!v) bearbeitet werden, RTF-Dateien mit einer
Textverarbeitung ausgegeben werden, etc.

!smallskip

UDO versucht, dem Verfasser des Textes soviel Arbeit wie möglich abzunehmen.
Neben der reinen Umwandlung bietet UDO daher je nach Ausgabeformat sinnvolle
Nützlichkeiten wie

!begin_itemize	!short
!item	automatische Generierung von Titelseiten, Kopfzeilen, Fußnoten,
		Inhaltsverzeichnissen,
!item	automatische Kapitelnumerierung,
!item	Tabellensatz,
!item	automatisches Anlegen von Querverweisen bei Hypertext-Formaten,
!item	Unterstützung verschiedener Schriftarten,
!item	automatische Umwandlung von Umlauten und sonstigen Sonderzeichen,
!item	umfangreiche Formatierungsmöglichkeiten mit Erstellung von
		Aufzählungen, Listen, Blocksatz, zentriertem, rechtsbündigem
		oder eingerücktem Text,
!item	automatisches Einbinden von Bildern sowie
!item	automatischen Zeilenumbruch mit halbautomatischer Silbentrennung.
!end_itemize

!smallskip

UDO hat so seine Stärken und Schwächen. Die Umwandlung ins ASCII-,
ST-Guide-, HTML-, (!LaTeX)- und WinHelp-Format gehören --- historisch
bedingt --- sicherlich zu den Stärken dieses Programms. Ausgabeformate
wie Linuxdoc-SGML und LyX werden erst seit kurzer Zeit angeboten und
wurden von mir nicht ausreichend getestet; hier gibt es sicherlich noch
ein paar Dinge, die demnächst geändert werden (müssen).

Einige Dinge stehen bei mir und sicherlich auch bei etlichen Benutzern ganz
oben auf der Wunschliste. Einige dieser Dinge werden sicherlich bald
unterstützt, wie z.B. die automatische Erzeugung eines
Stichwortverzeichnisses sowie die Ausgabe eines Abbildungs- und
Tabellenverzeichnisses.

!smallskip

Die Erstellung von komplexen Dokumenten wie Zeitschriften ist mit UDO nicht
möglich, da z.B. Bilder nicht frei positioniert oder von Text umflossen
werden können und UDO keinen Spaltensatz erzeugt kann. Zudem besitzt UDO
keine eingebaute automatische Silbentrennung.

UDO ist nur ein Textkonverter ""in eine Richtung"". UDO selbst kann
beispielsweise keine vorhandenen WinHelp-, (!LaTeX)- oder
ST-Guide-Quelltexte in das UDO-Format umwandeln. Bald werden aber zumindest
Programme erscheinen, die HTML- oder Linuxdoc-SGML-Dateien ins UDO-Format
umwandeln können.

Zusammenfassend kann gesagt werden, daß UDO folgende Dinge nicht kann und in
absehbarer Zukunft auch nicht können wird:

!begin_enumerate !short

!item	UDO kann nur das eigene Format in die oben aufgelisteten Formate
umwandeln. UDO kann keines dieser Formate in das eigene Format umwandeln.
Hierfür sind Zusatzprogramme nötig, die bald erhältlich sein werden.

!item	UDO kann keine Binärformate (z.B. WinWord-Dateien) erzeugen, sondern
nur ASCII-Formate, also solche, die man mit einem üblichen Editor bearbeiten
kann.

!item	UDO besitzt keine automatische Silbentrennung, sondern bietet nur
die Möglichkeit, Wörter an vom Autor markierten Stellen zu trennen. Auf eine
automatische Silbentrennung wird verzichtet, da der überwiegende Teil keine
Silbentrennung benötigt und UDO sonst nur größer, träger sowie teurer würde.

!item	UDO kann Bilder und Tabellen nicht von Text umfließen lassen. UDO
kann auch keinen Spaltensatz erzeugen. Dies sind Funktionen, die zum
Desktop Publishing gehören und in einem Programm wie UDO nichts zu suchen
haben.

!end_enumerate

