/**(TAB=0)**********************************************************************
*
*  Project name : UDO
*  Module name  : raw2iso.h
*  Symbol prefix: chr
*
*  Description  : Uebersetzungstabellen von ??? nach ISO-Latin-1
*
*  Copyright    : 1995-2001 Dirk Hagedorn
*  Open Source  : since 2001
*
*                 This program is free software; you can redistribute it and/or
*                 modify it under the terms of the GNU General Public License
*                 as published by the Free Software Foundation; either version 2
*                 of the License, or (at your option) any later version.
*                 
*                 This program is distributed in the hope that it will be useful,
*                 but WITHOUT ANY WARRANTY; without even the implied warranty of
*                 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*                 GNU General Public License for more details.
*                 
*                 You should have received a copy of the GNU General Public License
*                 along with this program; if not, write to the Free Software
*                 Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
*
*-------------------------------------------------------------------------------
*
*  Author       : Dirk Hagedorn (udo@dirk-hagedorn.de)
*  Co-Authors   : Ulf Dunkel (fd), Gerhard Stoll (ggs)
*  Write access : fd, ggs
*
*  Notes        : Please add yourself as co-author when you change this file.
*
*-------------------------------------------------------------------------------
*  Things to do : re-write UDO string and encoding engine for full Unicode support 
*
*-------------------------------------------------------------------------------
*  History:
*
*  2010:
*    fd  Feb 12: header updated, file reformatted and tidied up (TAB-free)
*
******************************************|************************************/

#ifndef __RAW2ISO__
#define __RAW2ISO__


#ifndef ID_RAW2ISO_H
#define ID_RAW2ISO_H
const char  *id_raw2iso_h = "@(#) raw2iso.h    $date$";
#endif


typedef struct _raw2iso
{
   unsigned char   raw;                   /* */
   unsigned char   iso;                   /* */
}  RAW2ISO;


const RAW2ISO   raw2iso_item[128] =
{
   { '\200',   '\200' },
   { '\201',   '\201' },
   { '\202',   '\202' },
   { '\203',   '\203' },
   { '\204',   '\204' },
   { '\205',   '\205' },
   { '\206',   '\206' },
   { '\207',   '\207' },

   { '\210',   '\210' },
   { '\211',   '\211' },
   { '\212',   '\212' },
   { '\213',   '\213' },
   { '\214',   '\214' },
   { '\215',   '\215' },
   { '\216',   '\216' },
   { '\217',   '\217' },

   { '\220',   '\220' },
   { '\221',   '\221' },
   { '\222',   '\222' },
   { '\223',   '\223' },
   { '\224',   '\224' },
   { '\225',   '\225' },
   { '\226',   '\226' },
   { '\227',   '\227' },

   { '\230',   '\230' },
   { '\231',   '\231' },
   { '\232',   '\232' },
   { '\233',   '\233' },
   { '\234',   '\234' },
   { '\235',   '\235' },
   { '\236',   '\236' },
   { '\237',   '\237' },

   { '\240',   '\240' },
   { '\241',   '\241' },
   { '\242',   '\242' },
   { '\243',   '\243' },
   { '\244',   '\244' },
   { '\245',   '\245' },
   { '\246',   '\246' },
   { '\247',   '\247' },

   { '\250',   '\250' },
   { '\251',   '\251' },
   { '\252',   '\252' },
   { '\253',   '\253' },
   { '\254',   '\254' },
   { '\255',   '\255' },
   { '\256',   '\256' },
   { '\257',   '\257' },

   { '\260',   '\260' },
   { '\261',   '\261' },
   { '\262',   '\262' },
   { '\263',   '\263' },
   { '\264',   '\264' },
   { '\265',   '\265' },
   { '\266',   '\266' },
   { '\267',   '\267' },

   { '\270',   '\270' },
   { '\271',   '\271' },
   { '\272',   '\272' },
   { '\273',   '\273' },
   { '\274',   '\274' },
   { '\275',   '\275' },
   { '\276',   '\276' },
   { '\277',   '\277' },

   { '\300',   '\300' },
   { '\301',   '\301' },
   { '\302',   '\302' },
   { '\303',   '\303' },
   { '\304',   '\304' },
   { '\305',   '\305' },
   { '\306',   '\306' },
   { '\307',   '\307' },

   { '\310',   '\310' },
   { '\311',   '\311' },
   { '\312',   '\312' },
   { '\313',   '\313' },
   { '\314',   '\314' },
   { '\315',   '\315' },
   { '\316',   '\316' },
   { '\317',   '\317' },

   { '\320',   '\320' },
   { '\321',   '\321' },
   { '\322',   '\322' },
   { '\323',   '\323' },
   { '\324',   '\324' },
   { '\325',   '\325' },
   { '\326',   '\326' },
   { '\327',   '\327' },

   { '\330',   '\330' },
   { '\331',   '\331' },
   { '\332',   '\332' },
   { '\333',   '\333' },
   { '\334',   '\334' },
   { '\335',   '\335' },
   { '\336',   '\336' },
   { '\337',   '\337' },

   { '\340',   '\340' },
   { '\341',   '\341' },
   { '\342',   '\342' },
   { '\343',   '\343' },
   { '\344',   '\344' },
   { '\345',   '\345' },
   { '\346',   '\346' },
   { '\347',   '\347' },

   { '\350',   '\350' },
   { '\351',   '\351' },
   { '\352',   '\352' },
   { '\353',   '\353' },
   { '\354',   '\354' },
   { '\355',   '\355' },
   { '\356',   '\356' },
   { '\357',   '\357' },

   { '\360',   '\360' },
   { '\361',   '\361' },
   { '\362',   '\362' },
   { '\363',   '\363' },
   { '\364',   '\364' },
   { '\365',   '\365' },
   { '\366',   '\366' },
   { '\367',   '\367' },

   { '\370',   '\370' },
   { '\371',   '\371' },
   { '\372',   '\372' },
   { '\373',   '\373' },
   { '\374',   '\374' },
   { '\375',   '\375' },
   { '\376',   '\376' },
   { '\377',   '\377' }
};

#endif /* __RAW2ISO__ */


/* +++ EOF +++ */

